Appel de fonctions LUA depuis le moteur C++ (événements) :

- event_map_started()					appelé une fois la map chargée
- event_update()					appelé à chaque cycle (à éviter si possible)
- event_set_suspended(suspended)			appelé lorsque le jeu est suspendu ou repris
- event_message_started(message_id)			appelé au début de l'affichage de chaque message d'un dialogue
- event_dialog_finished(message_id, answer)		appelé lorsqu'un dialogue se termine (i.e. après l'affichage du dernier message)
- event_switch_enabled(switch_name)			appelé lorsqu'un interrupteur vient d'être activé
- event_switch_disabled(switch_name)			appelé lorsqu'un interrupteur vient d'être désactivé
- event_hero_on_sensor(sensor_name)			appelé lorsque le héros marche sur un capteur
- event_camera_reached_target()				appelé lorsque la caméra (envoyée par move_camera()) a atteint sa cible
- event_interaction(entity_name)			appelé lorsque le joueur interagit une entité interactive sans message
							prédéfini (autre qu'un PNJ)
- event_npc_dialog(npc_name)				appelé lorsque le joueur parle à un PNJ sans message prédéfini
- event_npc_movement_finished(npc_name)			appelé lorsqu'un PNJ a terminé son mouvement de marche ou de saut
- event_open_empty_chest(chest_name)			appelé lorsque le joueur ouvre un coffre vide (son comportement sera alors défini par le script, le héros étant bloqué jusqu'à ce que le script appelle unfreeze()) 
- event_got_treasure(content, savegame_variable)	appelé lorsque le joueur obtient un trésor, qu'il vienne d'un coffre ou non

Appel de fonctions C++ depuis un script LUA :

- freeze()						empêche le joueur de bouger jusqu'à un appel à unfreeze()
- unfreeze()						restaure le contrôle au joueur
- start_message(message_id)				affiche un message
- set_message_variable(message_id, value)		spécifie la valeur de la variable dans un message
- play_sound(sound_id)					joue un son
- give_treasure(treasure_id, savegame_variable)		donne un trésor au joueur (sans coffre)
- give_treasure_with_amount(treasure_id, amount, savegame_variable)		donne un trésor au joueur (sans coffre)
- savegame_get_string(index)
- savegame_get_integer(index)
- savegame_get_boolean(index)
- savegame_set_string(index)
- savegame_set_integer(index)
- savegame_set_boolean(index)
- start_timer(duration, callback, with_sound)		démarre un timer qui appellera une fonction du script une fois terminé
- stop_timer(callback)					arrête un timer en cours d'exécution
- move_camera(x, y, speed)				suspend le jeu et déplace la caméra vers un point cible
- restore_camera()					renvoie la caméra vers le héros
- npc_walk(npc, path, loop, with_collisions)		fait se déplacer un PNJ selon un chemin spécifié
- npc_random_walk(npc)					fait se déplacer un PNJ de manière aléatoire
- npc_jump(npc, direction, length, with_collisions)	fait se déplacer un PNJ selon un chemin spécifié
- npc_set_direction(npc, direction)			change la direction du sprite d'un PNJ (0 à 3)
- npc_remove(npc)					supprime un PNJ de la map
- set_chest_open(chest_name, bool open)			modifie l'état d'un coffre (sans donner ni reprendre son contenu)
- get_rupees()						retourne le nombre de rubis
- remove_rupees(rupees)					enlève des rubis au joueur
- disable_tile(tile_name)				désactive un tile dynamique
- enable_tile(tile_name)				active un tile dynamique qui était désactivé
- is_tile_enabled(tile_name)				indique si un tile dynamique est activé
- reset_block(block_name)				replace un bloc comme il était au début de la map
- reset_blocks()					réinitialise tous les blocs de la map
- interactive_entity_get_animation(entity)			     retourne l'animation d'une entité interactive
- interactive_entity_get_animation_delay(entity)		     retourne la vitesse de l'animation d'une entité interactive
- interactive_entity_get_animation_frame(entity)		     retourne l'image de l'animation d'une entité interactive
- interactive_entity_is_animation_paused(entity)		     indique si l'animation d'une entité interactive est en pause
- interactive_entity_set_animation(entity, animation_name)	     change l'animation d'une entité interactive
- interactive_entity_set_animation_delay(entity, delay)		     change la vitesse de l'animation d'une entité interactive
- interactive_entity_set_animation_frame(entity, frame)		     change l'image de l'animation d'une entité interactive
- interactive_entity_set_animation_paused(entity, paused)	     met en pause ou restore l'animation d'une entité interactive
- equipment_get_tunic()				  	retourne la tunique du joueur (0 à 2)
- equipment_get_sword()					retourne l'épée du joueur (0 à 4)
- equipment_get_shield()				retourne le bouclier du joueur (0 à 3)
