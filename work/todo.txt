Prochaines mises à jour :

- avancement
- artworks Neovyze
- l'équipe
- fausse boîte


Feature requests :

- Fichiers de données : utiliser SDL_RWops et une archive cryptée ?
- Gérer les chemins des fichiers de sauvegarde et de configuration dans FileTools
- Mettre de la couleur dans les messages
- Ajouter des infos de statut quête dans l'écran de sélection des sauvegardes, en particulier quand une sauvegarde est choisie
- Afficher le nom du donjon dans le hud
- Rendre les pancartes soulevables
- Permettre aux ennemis de tomber dans les trous
- Permettre aux objets portés de tomber dans les trous et dans l'eau
- Permettre de couper voire régler la musique et/ou le son
- Mettre une icône sur l'exécutable
- Mettre des constantes dans les scripts
- Ajouter un type de terrain sur lequel on marche plus lentement (bien pour les échelles)
- Ralentir la vitesse du héros sur l'eau peu profonde
- Remplacer "clé" par "clef" ?
- Utiliser de l'héritage pour Movement::is_finished, cela évitera des cast


Bugs :

- plein écran se déclenche parfois avec des combinaisons de espace, gauche, haut (il croit que F5 a été appuyé)
- la barre de magie moyenne peut déborder (yoshi04)
- écran-titres : textes du bas flous
- quand ça rame (exemple Wink), les vases sont lancés moins loin
- quand ça rame (exemple Wink), possible de sortir de la pâtisserie pendant le dialogue "hé, attends" : corrigé depuis le freeze() de event_hero_on_sensor ?
- pousser un buisson empêche de le soulever (valable aussi pour coffres ?), d'utiliser un objet, etc
- l'ombre des pots passe sur Link pendant qu'on les soulève
- la palette de couleurs des sprites de newlink n'est pas la même que celle du jeu original, il faudrait corriger quelques couleurs.
- Forgeron : ajouter décors de la forge
- trous et plates-formes dans la grotte de mymy
- Tom trop vieux ? changer la couleur de ses cheveux
- Rubis trop haut de 1 pixel par rapport à son ombre ?
- Je trouve que le bouton "suite" est un peu bas, je ne sais plus comment c'est dans ALTTP, mais pourquoi ne pas le monter au niveau de l'HUD ? (se superpose avec l'affichage des étages)
- path finding : ne pas explorer les noeuds trop loin de la cible (on perd du temps à s'éloigner sans grand espoir)
- PathFinding : si pas de chemin mais pas trop loin, essayer de s'approcher quand même
- petite clé du hud : reprendre la même que dans le hud de alttp
- tapis roulants forçables

A venir :

- Intro
- Boss
- Prochains types d'entités :
  - portes
  - tapis roulants
  - piquants
  - choux-péteurs
  - blocs violets
- Lanterne


Ennemis à faire (reprendre graphismes de MC + graphismes rippés) :

pour la démo :
- GreenSoldier : garde vert normal (intelligent avec longue épée)
- Tentacle : truc à tentacules
- Bubble

ensuite (beaucoup faits dans MC) :
- Octorok
- serpent
- stalfos
- méduse
- crabe
- Armos
- fantôme
- garde bleu avec lance (monde des ténèbres)


Testeurs :

- Essayer des combinaisons d'objets compliqués (blocs, trous, ennemis, escaliers, eau, game over avec fée, changements de maps...)
- Tester les animations avec les différentes épées, boucliers et tuniques


Remarques de Linksupersayen :

  - Écran titre un peu figé, on aimerait bien un petit peu d'animation.
  - Je pense qu'il faudrait accélérer l'animation de Link quand il marche. Dans A Link To The Past, Link semblait plus rapide dans son animation.
  - Nous sommes tellement habitués aux petits bruitages quand les lettres défilent lors d'un message qu'ils agissent un peu comme un drogue maintenant. On en a besoin s'il vous plaît !
  - Link semble disparaître un peu lors des phases à l'épée.
  - Les musiques. On adore les musiques de A Link To The Past... sur la Super Nintendo et la Game Boy Advance, mais sur le PC, elle semblent un peu enregistrées, enfin, il faudrait augmenter la qualité sonore et là, ça serait bon !
  - D'ailleurs, le bruitage d'arrêt de la roulette lors du Bingo ne colle pas à l'ambiance musicale.

  
Remarques de @PyroNet :

- bandit manchot : graphismes pas exceptionnels, tapis pas centré
- bandit manchot : débloquer plus tard dans le jeu et laisser un message "casino hors-service" ? ou garder ce clin d'oeil pour le moment où la maison est dévalisée ?

Idées :

- Passer à travers un tableau de Mario comme dans Mario 64

----------------
Ancien planning prévisionnel
----------------

[ok] Dimanche 5 octobre 2008 : animation tire + pierres trop lourdes
[ok] Dimanche 12 octobre 2008 : menu de pause fini, touches configurables, sauvegarde depuis le menu
[ok] Dimanche 19 octobre 2008 : collisions au pixel près, couper les buissons avec l'épée
[ok] Dimanche 26 octobre 2008 : monde extérieur
[ok] Dimanche 2 novembre 2008 : combats (un type d'ennemi)
[ok] Dimanche 9 novembre 2008 : scripts et PNJ
[ok] Dimanche 16 novembre 2008 : maison des rubis
[ok]Dimanche 23 novembre 2008 : autres maisons et grottes
Dimanche 30 novembre 2008 : donjon 1 commencé ; annonce de la démo si on est dans les temps
Dimanche 7 décembre 2008 : combats (autres types d'ennemis), objets à finir (bombes, croissants, flacon...)
Dimanche 14 décembre 2008 : donjon 1 fini, démo finie, début des tests
Dimanche 21 décembre 2008 : cryptage des fichiers
Mercredi 24 décembre 2008 : sortie de la démo jusqu'à la fin du donjon 1

----------------
Archivage des fichiers de données
----------------

But : mettre tous les fichiers de données dans un fichier zip, et lire ces fichiers en les décompressant en mémoire et non sur le disque

Utiliser la bibliothèque ZZipLib (http://zziplib.sourceforge.net/zzip-sdl-rwops.html) pour ouvrir les fichiers de manière transparente avec le même chemin d'accès, qu'ils soient placés dans un répertoire ou dans une archive zip. Seule différence : il faut utiliser zzip_open à la place de open et zzip_fopen à la place de fopen.
Faire un objet SDL_RWops (en utilisant ou en s'inspirant de celui de lib) qui ouvre un fichier avec zzip, ce sera utilisable pour ouvrir les images SDL et les fichiers ini pour SDL_Config. Pour FMOD, décompresser le fichier dans une zone mémoire et utiliser les fonctions de FMOD permettant de lire un flux en mémoire au lieu de depuis un fichier. Pour les tilesets, maps et autres, utiliser std::ifstream au lieu de std::istringstream après avoir chargé le texte en mémoire. Ceci peut être abstrait en demandant au ResourceManager de renvoyer un std::istream !

Pas de cryptage mais
- nommer le fichier zip avec une autre extension (spécifiée à la bibliothèque avec les fonctions _ext_io)
- éventuellement utiliser l'obfuscation style xor de la bibliothèque (très simple mais le but est juste d'empêcher de voir directement les fichiers)
- éventuellement à l'ouverture du jeu, vérifier le checksum du fichier zip pour s'assurer qu'il n'a pas été modifié

--------------
Mode release :
--------------

- Ne plus afficher les messages d'erreur
- Forcer l'ouverture des fichiers de données depuis le fichier zip et interdire depuis l'arborescence
- Cacher le mode Rêves de Solarus s'il n'est pas encore fait
- Compiler en mode release (pas -g) et optimiser
- Inclure le fichier de licence GPL
- Vérifier la présence du message GPL dans les fichiers source
- Enelever les touches de test (notamment Echap)

----------------------
Feature requests de l'éditeur :

- Compléter l'éditeur de maps et de tilesets :
	- Dans l'éditeur de tileset, étudier le problème de permettre de modifier un tile sans avoir à le supprimer (pour conserver le même indice)
	- vue arborescente de toutes les entités par type ?
	- choisir les types d'entités affichés
	- nouveau projet : créer le fichier resource_db.zsd automatiquement, le répertoire data et les sous-répertoires
	- empêcher de mettre des entités au-delà de la partie extérieure d'une map
	- ResourceDatabase: créer les objets de chaque ressource depuis là, pour les fournir aux autres, ça évitera que chacun les recrée quand il a besoin (réfléchir au fait que les maps par exemple ne seront pas rechargées)
	- Editeur de tileset : ajouter le choix des animations dans le popup menu
	- Quand on annule une suppression ou qu'on fait un copier-coller, les plans ne sont pas respectés
	- Editeur de maps : sélectionner uniquement les objets visibles (non obstacles / obstacles cochés ou pas)
	- Dézoomer avec Ctrl + molette
	- Parser les fichiers de sprite dans l'éditeur (utile pour PNJ et entités avec skin)
	- Eviter d'avoir à recharger la map pour voir les destinations mises à jour
	- Affichage : dessiner les tiles une seule fois sur une surface intermédiaire au lieu de les redessiner un par un à chaque affichage (c'est possible dans l'éditeur mais pas facilement dans le jeu à cause des tiles animés)
	- Permettre de modifier les textes "Direction", "Subtype", etc... depuis les sous-classes de EditEntityComponent afin de rendre certains plus explicites (exemple : mettre "Pushing direction" pour les blocs)
	- Interface pour éditer les étages des donjons
