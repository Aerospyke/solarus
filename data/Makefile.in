# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# data files needed by the game

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = data
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
SOURCES =
DIST_SOURCES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(images_dir)" \
	"$(DESTDIR)$(images_sprites_link_dir)" \
	"$(DESTDIR)$(images_tilesets_dir)" "$(DESTDIR)$(maps_dir)" \
	"$(DESTDIR)$(music_dir)" "$(DESTDIR)$(sound_dir)" \
	"$(DESTDIR)$(sprites_link_dir)" "$(DESTDIR)$(tilesets_dir)" \
	"$(DESTDIR)$(zsdxdatadir)"
images_DATA_INSTALL = $(INSTALL_DATA)
images_sprites_link_DATA_INSTALL = $(INSTALL_DATA)
images_tilesets_DATA_INSTALL = $(INSTALL_DATA)
maps_DATA_INSTALL = $(INSTALL_DATA)
music_DATA_INSTALL = $(INSTALL_DATA)
sound_DATA_INSTALL = $(INSTALL_DATA)
sprites_link_DATA_INSTALL = $(INSTALL_DATA)
tilesets_DATA_INSTALL = $(INSTALL_DATA)
zsdxdataDATA_INSTALL = $(INSTALL_DATA)
DATA = $(images__DATA) $(images_sprites_link__DATA) \
	$(images_tilesets__DATA) $(maps__DATA) $(music__DATA) \
	$(sound__DATA) $(sprites_link__DATA) $(tilesets__DATA) \
	$(zsdxdata_DATA)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
zsdxdatadir = $(datadir)/zsdx
zsdxdata_DATA = project_db.zsd
images_dir = $(zsdxdatadir)/images
images__DATA = \
  images/title.png

sound_dir = $(zsdxdatadir)/sounds
sound__DATA = \
  sounds/agahnim_blue_ball.wav			\
  sounds/agahnim_orange_ball.wav		\
  sounds/bomb.wav				\
  sounds/boss_dead.wav				\
  sounds/boss_hurt.wav				\
  sounds/bounce.wav				\
  sounds/bow.wav				\
  sounds/bush.wav				\
  sounds/chest_appears.wav			\
  sounds/chest_open.wav				\
  sounds/cursor.wav				\
  sounds/door_closed.wav			\
  sounds/door_open.wav				\
  sounds/drowning.wav				\
  sounds/enemy_awake.wav			\
  sounds/enemy_hurt.wav				\
  sounds/enemy_dead.wav				\
  sounds/explosion.wav				\
  sounds/heart.wav				\
  sounds/hookshot.wav				\
  sounds/ice.wav				\
  sounds/item_in_water.wav			\
  sounds/jump.wav				\
  sounds/lamp.wav				\
  sounds/lens_of_truth_end.wav			\
  sounds/lens_of_truth_start.wav		\
  sounds/lift.wav				\
  sounds/link_falls.wav				\
  sounds/link_hurt.wav				\
  sounds/link_pushes.wav			\
  sounds/link_seen.wav				\
  sounds/magic_bar.wav				\
  sounds/message_end.wav			\
  sounds/monster_hurt.wav			\
  sounds/octorok.wav				\
  sounds/pause_closed.wav			\
  sounds/pause_open.wav				\
  sounds/picked_item.wav			\
  sounds/picked_rupee.wav			\
  sounds/picked_small_key.wav			\
  sounds/piece_of_heart.wav			\
  sounds/rupee_counter_end.wav			\
  sounds/rupee_counter.wav			\
  sounds/secret.wav				\
  sounds/shield.wav				\
  sounds/stone.wav				\
  sounds/switch.wav				\
  sounds/sword1.wav				\
  sounds/sword2.wav				\
  sounds/sword3.wav				\
  sounds/sword4.wav				\
  sounds/sword_spin_attack_load.wav		\
  sounds/sword_spin_attack_release.wav		\
  sounds/throw.wav				\
  sounds/treasure.wav				\
  sounds/victory.wav				\
  sounds/walk_on_grass.wav			\
  sounds/walk_on_water.wav			\
  sounds/wrong.wav				\
  sounds/zora.wav				

music_dir = $(zsdxdatadir)/music
music__DATA = \
  music/boss.it					\
  music/castle.it				\
  music/credits.it				\
  music/dark_world.it				\
  music/fanfare.it				\
  music/game_over.it				\
  music/menu.it					\
  music/mini_game.it				\
  music/overworld.it				\
  music/rabbit.it				\
  music/soldiers.it				\
  music/title_screen.it				\
  music/village.it					

tilesets_dir = $(zsdxdatadir)/tilesets
tilesets__DATA = \
  tilesets/tileset0000.zsd

images_tilesets_dir = $(images_dir)/tilesets
images_tilesets__DATA = \
  images/tilesets/tileset0000.png		

maps_dir = $(zsdxdatadir)/maps
maps__DATA = \
  maps/map0000.zsd				\
  maps/map0001.zsd				\
  maps/map0002.zsd				

sprites_link_dir = $(zsdxdatadir)/sprites/link
sprites_link__DATA = \
  sprites/link/link_green.zsd			\
  sprites/link/link_blue.zsd			\
  sprites/link/link_red.zsd			\
  sprites/link/sword1.zsd			\
  sprites/link/sword2.zsd			\
  sprites/link/sword3.zsd			\
  sprites/link/sword4.zsd			

images_sprites_link_dir = $(images_dir)/sprites/link
images_sprites_link__DATA = \
  images/sprites/link/stopped.png		\
  images/sprites/link/walking.png		\
  images/sprites/link/sword_tunic0.png		\
  images/sprites/link/sword_tunic1.png		\
  images/sprites/link/sword_tunic2.png		\
  images/sprites/link/sword1.png		\
  images/sprites/link/sword2.png		\
  images/sprites/link/sword3.png		\
  images/sprites/link/sword4.png		

EXTRA_DIST = \
  $(zsdxdata_DATA)				\
  $(images__DATA)				\
  $(images_sprites_link__DATA)			\
  $(images_tilesets__DATA)			\
  $(sound__DATA)				\
  $(music__DATA)				\
  $(sprite_link__DATA)				\
  $(tilesets__DATA)				\
  $(maps__DATA)					

all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  data/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  data/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-images_DATA: $(images__DATA)
	@$(NORMAL_INSTALL)
	test -z "$(images_dir)" || $(MKDIR_P) "$(DESTDIR)$(images_dir)"
	@list='$(images__DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(images_DATA_INSTALL) '$$d$$p' '$(DESTDIR)$(images_dir)/$$f'"; \
	  $(images_DATA_INSTALL) "$$d$$p" "$(DESTDIR)$(images_dir)/$$f"; \
	done

uninstall-images_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(images__DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(images_dir)/$$f'"; \
	  rm -f "$(DESTDIR)$(images_dir)/$$f"; \
	done
install-images_sprites_link_DATA: $(images_sprites_link__DATA)
	@$(NORMAL_INSTALL)
	test -z "$(images_sprites_link_dir)" || $(MKDIR_P) "$(DESTDIR)$(images_sprites_link_dir)"
	@list='$(images_sprites_link__DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(images_sprites_link_DATA_INSTALL) '$$d$$p' '$(DESTDIR)$(images_sprites_link_dir)/$$f'"; \
	  $(images_sprites_link_DATA_INSTALL) "$$d$$p" "$(DESTDIR)$(images_sprites_link_dir)/$$f"; \
	done

uninstall-images_sprites_link_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(images_sprites_link__DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(images_sprites_link_dir)/$$f'"; \
	  rm -f "$(DESTDIR)$(images_sprites_link_dir)/$$f"; \
	done
install-images_tilesets_DATA: $(images_tilesets__DATA)
	@$(NORMAL_INSTALL)
	test -z "$(images_tilesets_dir)" || $(MKDIR_P) "$(DESTDIR)$(images_tilesets_dir)"
	@list='$(images_tilesets__DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(images_tilesets_DATA_INSTALL) '$$d$$p' '$(DESTDIR)$(images_tilesets_dir)/$$f'"; \
	  $(images_tilesets_DATA_INSTALL) "$$d$$p" "$(DESTDIR)$(images_tilesets_dir)/$$f"; \
	done

uninstall-images_tilesets_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(images_tilesets__DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(images_tilesets_dir)/$$f'"; \
	  rm -f "$(DESTDIR)$(images_tilesets_dir)/$$f"; \
	done
install-maps_DATA: $(maps__DATA)
	@$(NORMAL_INSTALL)
	test -z "$(maps_dir)" || $(MKDIR_P) "$(DESTDIR)$(maps_dir)"
	@list='$(maps__DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(maps_DATA_INSTALL) '$$d$$p' '$(DESTDIR)$(maps_dir)/$$f'"; \
	  $(maps_DATA_INSTALL) "$$d$$p" "$(DESTDIR)$(maps_dir)/$$f"; \
	done

uninstall-maps_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(maps__DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(maps_dir)/$$f'"; \
	  rm -f "$(DESTDIR)$(maps_dir)/$$f"; \
	done
install-music_DATA: $(music__DATA)
	@$(NORMAL_INSTALL)
	test -z "$(music_dir)" || $(MKDIR_P) "$(DESTDIR)$(music_dir)"
	@list='$(music__DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(music_DATA_INSTALL) '$$d$$p' '$(DESTDIR)$(music_dir)/$$f'"; \
	  $(music_DATA_INSTALL) "$$d$$p" "$(DESTDIR)$(music_dir)/$$f"; \
	done

uninstall-music_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(music__DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(music_dir)/$$f'"; \
	  rm -f "$(DESTDIR)$(music_dir)/$$f"; \
	done
install-sound_DATA: $(sound__DATA)
	@$(NORMAL_INSTALL)
	test -z "$(sound_dir)" || $(MKDIR_P) "$(DESTDIR)$(sound_dir)"
	@list='$(sound__DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(sound_DATA_INSTALL) '$$d$$p' '$(DESTDIR)$(sound_dir)/$$f'"; \
	  $(sound_DATA_INSTALL) "$$d$$p" "$(DESTDIR)$(sound_dir)/$$f"; \
	done

uninstall-sound_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sound__DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(sound_dir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sound_dir)/$$f"; \
	done
install-sprites_link_DATA: $(sprites_link__DATA)
	@$(NORMAL_INSTALL)
	test -z "$(sprites_link_dir)" || $(MKDIR_P) "$(DESTDIR)$(sprites_link_dir)"
	@list='$(sprites_link__DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(sprites_link_DATA_INSTALL) '$$d$$p' '$(DESTDIR)$(sprites_link_dir)/$$f'"; \
	  $(sprites_link_DATA_INSTALL) "$$d$$p" "$(DESTDIR)$(sprites_link_dir)/$$f"; \
	done

uninstall-sprites_link_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(sprites_link__DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(sprites_link_dir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sprites_link_dir)/$$f"; \
	done
install-tilesets_DATA: $(tilesets__DATA)
	@$(NORMAL_INSTALL)
	test -z "$(tilesets_dir)" || $(MKDIR_P) "$(DESTDIR)$(tilesets_dir)"
	@list='$(tilesets__DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(tilesets_DATA_INSTALL) '$$d$$p' '$(DESTDIR)$(tilesets_dir)/$$f'"; \
	  $(tilesets_DATA_INSTALL) "$$d$$p" "$(DESTDIR)$(tilesets_dir)/$$f"; \
	done

uninstall-tilesets_DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(tilesets__DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(tilesets_dir)/$$f'"; \
	  rm -f "$(DESTDIR)$(tilesets_dir)/$$f"; \
	done
install-zsdxdataDATA: $(zsdxdata_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(zsdxdatadir)" || $(MKDIR_P) "$(DESTDIR)$(zsdxdatadir)"
	@list='$(zsdxdata_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(zsdxdataDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(zsdxdatadir)/$$f'"; \
	  $(zsdxdataDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(zsdxdatadir)/$$f"; \
	done

uninstall-zsdxdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(zsdxdata_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(zsdxdatadir)/$$f'"; \
	  rm -f "$(DESTDIR)$(zsdxdatadir)/$$f"; \
	done
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(images_dir)" "$(DESTDIR)$(images_sprites_link_dir)" "$(DESTDIR)$(images_tilesets_dir)" "$(DESTDIR)$(maps_dir)" "$(DESTDIR)$(music_dir)" "$(DESTDIR)$(sound_dir)" "$(DESTDIR)$(sprites_link_dir)" "$(DESTDIR)$(tilesets_dir)" "$(DESTDIR)$(zsdxdatadir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-images_DATA install-images_sprites_link_DATA \
	install-images_tilesets_DATA install-maps_DATA \
	install-music_DATA install-sound_DATA \
	install-sprites_link_DATA install-tilesets_DATA \
	install-zsdxdataDATA

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-images_DATA uninstall-images_sprites_link_DATA \
	uninstall-images_tilesets_DATA uninstall-maps_DATA \
	uninstall-music_DATA uninstall-sound_DATA \
	uninstall-sprites_link_DATA uninstall-tilesets_DATA \
	uninstall-zsdxdataDATA

.MAKE: install-am install-strip

.PHONY: all all-am check check-am clean clean-generic distclean \
	distclean-generic distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-images_DATA \
	install-images_sprites_link_DATA install-images_tilesets_DATA \
	install-info install-info-am install-man install-maps_DATA \
	install-music_DATA install-pdf install-pdf-am install-ps \
	install-ps-am install-sound_DATA install-sprites_link_DATA \
	install-strip install-tilesets_DATA install-zsdxdataDATA \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am uninstall uninstall-am uninstall-images_DATA \
	uninstall-images_sprites_link_DATA \
	uninstall-images_tilesets_DATA uninstall-maps_DATA \
	uninstall-music_DATA uninstall-sound_DATA \
	uninstall-sprites_link_DATA uninstall-tilesets_DATA \
	uninstall-zsdxdataDATA

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
