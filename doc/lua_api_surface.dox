/**
\page lua_api_surface Surfaces

A surface is a 2D image. Its main feature is that you can draw objects
on it. Such objects are called displayable objects and they include
other surfaces, text surfaces and sprites.

- \ref lua_api_surface_functions
- \ref lua_api_surface_displayable_methods
- \ref lua_api_surface_methods

<hr>

\section lua_api_surface_functions Functions of sol.surface

<hr>

\subsection lua_api_surface_create_empty sol.surface.create([width, height])
Creates an empty surface.
- \c width (number, optional): Width of the surface to create in pixels.
  The default value is the width of the screen.
- \c height (number, optional): Height of the surface to create in pixels.
  The default value is the height of the screen.
- Return value (surface): The surface created.

<hr>

\subsection lua_api_surface_create_from_file sol.surface.create(file_name, [language_specific])

Creates a surface from an image file.
  - \c file_name (string): Name of the image file to load.
  - \c language_specific (boolean, optional): \c true to load the image
    from the \c images subdirectory of the current language directory
    (default is \c false and loads the image from the \c sprites directory).
  - Return value (surface): The surface created.

<hr>

\subsection lua_api_surface_create_from_surface sol.surface.create(src_surface, [x, y, width, height])

Creates a surface as a copy of a region of an existing surface.

The last four parameters define the region of the existing surface to copy.
They are optional: by default, the whole surface is copied.
  - \c src_surface (surface): An existing surface.
  - \c x (integer, optional): X coordinate of the region in pixels.
  - \c y (integer, optional): X coordinate of the region in pixels.
  - \c width (integer, optional): Width of the region in pixels.
  - \c height (integer, optional): Height of the region in pixels.
  - Return value (surface): The surface created.

<hr>

\section lua_api_surface_displayable_methods Methods inherited from the type displayable

Surfaces are particular displayable objects.
Thus, they inherit all methods from the type displayable.

See the \ref lua_api_displayable_methods to know these methods.

<hr>

\section lua_api_surface_methods Methods of the type surface

The following methods are specific to surfaces.

<hr>

\subsection lua_api_surface_get_size surface:get_size()

Returns the size of this surface.
- Return value 1 (number): Width of the surface in pixels.
- Return value 2 (number): Height of the surface in pixels.

<hr>

\subsection lua_api_surface_fill_color surface:fill_color(color)

Fills this surface with a color.
- \c color (table): The color as an array of 3 RGB values (\c 0 to \c 255).

<hr>

\subsection lua_api_surface_set_transparency_color surface:set_transparency_color(color)

Sets a transparency color to this surface. Pixels in that color won't be
displayed.
- \c color (table): The color as an array of 3 RGB values (\c 0 to \c 255).

<hr>

\subsection lua_api_surface_set_opacity surface:set_opacity(opacity)

Sets the opacity of this surface.

All surfaces are initially opaque.
- \c opacity (integer): The opacity: \c 0 (transparent) to \c 255 (opaque).

*/

