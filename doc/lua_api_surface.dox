/**
\page lua_api_surface Surfaces

The \c sol.surface module provides the type surface,
which represents a 2D image. You can draw displayable objects
(i.e. other surfaces, text surfaces and sprites) on a surface.

- \c sol.surface.create(width, height):
Creates an empty surface. The default size is the size of the screen.
  - \c width (number, optional): width of the surface to create in pixels
  - \c height (number, optional): height of the surface to create in pixels
  - Return value (surface): the surface created

- \c sol.surface.create(file_name, language_specific):
Creates a surface from an image file.
  - \c file_name (string): name of the image file to load
  - \c language_specific (boolean, optional): true to load the image
    from the \c images subdirectory of the current language directory
    (default is false and loads the image from the \c sprites directory)
  - Return value (surface): the surface created

- \c sol.surface.create(surface, x, y, width, height):
Creates a surface from a region of an existing surface
  - \c surface (surface): an existing surface
  - \c x (integer): x coordinate of the region in pixels
  - \c y (integer): y coordinate of the region in pixels
  - \c width (integer): width of the region in pixels
  - \c height (integer): height of the region in pixels
  - Return value (surface): the surface created

- \c surface:get_size():
Returns the size of this surface.
  - Return value 1 (number): width of the surface in pixels
  - Return value 2 (number): width of the surface in pixels

- \c surface:fill_color(color):
Fills this surface with a color.
  - \c color (table): the color as an array of 3 RGB values (0 to 255)

- \c surface:draw(dst_surface, x, y):
Displays this surface on another surface.
  - \c dst_surface (surface): The destination surface.
  - \c x (number, optional): X coordinate of where to draw this surface.
  - \c y (number, optional): Y coordinate of where to draw this surface.

- \c surface:set_transparency_color(color):
Sets a transparency color to this surface. Pixels in that color won't be
displayed.
  - \c color (table): the color as an array of 3 RGB values (0 to 255)

- \c surface:set_opacity(opacity):
Sets the opacity of this surface.
  - \c opacity (integer): the opacity (0 (transparent) to 255 (opaque),
    default is 255)

- \c surface:fade_in(delay, callback):
Starts a fade-in effect on this surface.
  - \c delay (number, optional): delay in milliseconds between two
    frames of the fade-in animation (default is 20)
  - \c callback (function, optional): a function to call when the
    fade-in effect finishes

- \c surface:fade_out(delay, callback):
Starts a fade-out effect on this surface.
  - \c delay (number, optional): delay in milliseconds between two
    frames of the fade-out animation (default is 20)
  - \c callback (function, optional): a function to call when the
    fade-out effect finishes

*/

