- Détecteurs : ne pas notifier à nouveau si l'entité était déjà sur le détecteur
- FMOD : enlever le répertoire /usr/include/fmod ? (Chichi)
- Compléter l'éditeur de maps et de tilesets :
	- Dans l'éditeur de tileset, étudier le problème de permettre de modifier un tile sans avoir à le supprimer (pour conserver le même indice)
	- Trouver un moyen de mixer l'ajout de tiles au clic droit et le redimensionnement immédiat
	- Editeur de maps : permettre de placer d'autres objets que les tiles (entrées et sorties notamment)
	- Masquer les fichiers des maps et des tilesets
	- Taille minimale d'une map : 320*240 ?!
	- Annuler / Rétablir



----------
Annuler / rétablir :

classes MapEditorAction et MapEditorHistory (pile d'actions)
actions existantes :
	- changer la taille de la map (stocker taille avant, taille après)
	- changer le tileset (stocker tileset avant, tileset après, allTiles avant, allTiles après (pas de copie profonde))
	- ajouter un tile (stocker une copie du tile ajouté)
	- supprimer un ou plusieurs tiles (stocker la liste des tiles supprimés)
	- changer la position d'un ou plusieurs tiles (stocker la liste des tiles qui changent, dx, dy)
	- changer la musique (stocker la musique avant et après)
	- changer le layer d'un ou plusieurs tiles (stocker la liste des tiles qui changent, la liste des layers avant, le layer après)
	- changer la taille et la position d'un tile (stocker le tile qui change, son rectangle avant, son rectangle après)

il faut pouvoir faire des copies de allTiles

classe abstraite MapEditorAction :
       - public void execute()
       - public void undo()

classe MapEditorHistory :
       - public void addAction() : empile une action et l'exécute
       - public void undo() : annule la dernière action empilée
       - public void redo() : refait la dernière action annulée
       - public boolean setSaved() : 

depuis la classe Map :
       - méthodes dont le nom commence par "action" (appelées par l'interface graphique) :
              - on crée une action
	      - on l'ajoute à l'historique
       - méthodes qui exécutent les actions correspondantes (appelées par execute de MapEditorAction)

