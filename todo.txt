- Son d'un vase cassé : pas assez fort
- Fichiers de données : utiliser SDL_RWops et une archive cryptée ?
- Gérer les chemins des fichiers de sauvegarde dans FileTools
- Mettre de la couleur dans les messages
- Voir les boss de Pyro
- Afficher le nom du donjon dans le hud
- Classe donjon dans l'éditeur: interface pour éditer les étages des donjons
- Joystick : tester le hat
- Activer la répétition des touches dans l'écran du choix du nom du joueur
- Remplacer Link par Hero
- Herbe ou eau sous Link

- Bugs:
  - plein écran se déclenche parfois avec des combinaisons de espace, gauche, haut (il croit que F5 a été appuyé)
  - ennemis saccadés au début de la map

- Prochaines grandes étapes :
  - game over
  - portes
  - pnj

----------------
Planning prévisionnel
----------------

Non mentionné :
- Casino
- Intro
- Boss
- Ecran titre
- Portes

[ok] Dimanche 5 octobre 2008 : animation tire + pierres trop lourdes
[ok] Dimanche 12 octobre 2008 : menu de pause fini, touches configurables, sauvegarde depuis le menu
[ok] Dimanche 19 octobre 2008 : collisions au pixel près, couper les buissons avec l'épée
[ok] Dimanche 26 octobre 2008 : monde extérieur
[en cours] Dimanche 2 novembre 2008 : combats (un type d'ennemi)
[ok / en cours] Dimanche 9 novembre 2008 : scripts et PNJ
Dimanche 16 novembre 2008 : maison des rubis
Dimanche 23 novembre 2008 : autres maisons et grottes
Dimanche 30 novembre 2008 : donjon 1 commencé ; annonce de la démo si on est dans les temps
Dimanche 7 décembre 2008 : combats (autres types d'ennemis), objets à finir (bombes, croissants, flacon...)
Dimanche 14 décembre 2008 : donjon 1 fini, démo finie, début des tests
Dimanche 21 décembre 2008 : cryptage des fichiers
Mercredi 24 décembre 2008 : sortie de la démo jusqu'à la fin du donjon 1

----------------
Herbe sous Link
----------------

Dans la classe Link, mettre une info qui dit ce qui est affiché sous Link (cela pourra aussi être de l'eau).
Dans le update() de Link, tester en permanence si l'origine de Link est sur de l'herbe, tout comme on teste en permanence si le facing point est sur un objet qui y réagit.


----------------
Archivage des fichiers de données
----------------

But : mettre tous les fichiers de données dans un fichier zip, et lire ces fichiers en les décompressant en mémoire et non sur le disque

Utiliser la bibliothèque ZZipLib (http://zziplib.sourceforge.net/zzip-sdl-rwops.html) pour ouvrir les fichiers de manière transparente avec le même chemin d'accès, qu'ils soient placés dans un répertoire ou dans une archive zip. Seule différence : il faut utiliser zzip_open à la place de open et zzip_fopen à la place de fopen.
Faire un objet SDL_RWops (en utilisant ou en s'inspirant de celui de lib) qui ouvre un fichier avec zzip, ce sera utilisable pour ouvrir les images SDL et les fichiers ini pour SDL_Config. Pour FMOD, décompresser le fichier dans une zone mémoire et utiliser les fonctions de FMOD permettant de lire un flux en mémoire au lieu de depuis un fichier. Pour les tilesets, maps et autres, utiliser std::ifstream au lieu de std::istringstream après avoir chargé le texte en mémoire. Ceci peut être abstrait en demandant au ResourceManager de renvoyer un std::istream !

Pas de cryptage mais
- nommer le fichier zip avec une autre extension (spécifiée à la bibliothèque avec les fonctions _ext_io)
- éventuellement utiliser l'obfuscation style xor de la bibliothèque (très simple mais le but est juste d'empêcher de voir directement les fichiers)
- éventuellement à l'ouverture du jeu, vérifier le checksum du fichier zip pour s'assurer qu'il n'a pas été modifié

--------------
Mode release :
--------------

- Ne plus afficher les messages d'erreur
- Forcer l'ouverture des fichiers de données depuis le fichier zip et interdire depuis l'arborescence

----------------------
- Compléter l'éditeur de maps et de tilesets :
	- Dans l'éditeur de tileset, étudier le problème de permettre de modifier un tile sans avoir à le supprimer (pour conserver le même indice)
	- vue arborescente de toutes les entités par type ?
	- choisir les types d'entités affichés
	- nouveau projet : créer le fichier resource_db.zsd automatiquement, le répertoire data et les sous-répertoires
	- empêcher de mettre des entités au-delà de la partie extérieure d'une map
	- ResourceDatabase: créer les objets de chaque ressource depuis là, pour les fournir aux autres, ça évitera que chacun les recrée quand il a besoin (réfléchir au fait que les maps par exemple ne seront pas rechargées)
	- Editeur de tileset : ajouter le choix des animations dans le popup menu
	- Quand on annule une suppression ou qu'on fait un copier-coller, les plans ne sont pas respectés
	- Editeur de maps : sélectionner uniquement les objets visibles (non obstacles / obstacles cochés ou pas)
	- Le message "Some tiles have been removed..." s'affiche quand on ouvre la map mais pas quand on change le tileset une fois ouvert (il y a une exception à la place)
	- Dézoomer avec Ctrl + molette
