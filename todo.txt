- Diviser la classe Link en plusieurs parties (plus de 1000 lignes...) - LinkActions, LinkSprites ? ou alors LinkStateFree, LinkStateSword...
- Son d'un vase cassé : pas assez fort
- Fichiers de données : utiliser SDL_RWops et une archive cryptée ?
- Gérer les chemins des fichiers de sauvegarde dans FileTools
- Mettre de la couleur dans les messages
- Voir les boss de Pyro
- Sauvegarde des éléments de donjon : ajouter le fait que le donjon soit fini
- Afficher les petites clés dans le hud

Bugs :
- Editeur de maps : l'entrée d'une map ne prend plus la bonne direction

- Prochaines grandes étapes :
  - collision au pixel près
  - couper des buissons et des herbes
  - écran de pause
  - combats
  - scripts
  - portes

----------------
Couper des buissons avec l'épée :
----------------
- utiliser le mode collision_pixel directement (voir comment faire 2 modes à la fois car on a déjà facing point pour soulever)
- puis, en cas de collision au pixel près avec le sprite de l'épée :
    - si c'est un coup d'épée normal : on coupe le buisson si le facing point de link est dans l'alignement du buisson (pas forcément dessus) et à moins d'une certaine distance
    - si l'épée charge ou est chargée : pareil mais en plus on stoppe le chargement
    - si attaque tournoyante : on coupe le buisson et on laisse l'attaque tournoyante continuer (donc c'est le seul cas où on peut couper plusieurs buissons d'un coup)

Même chose pour l'herbe sauf que rien ne se passe quand l'épée charge

----------------
Carte, donjons, phases d'exploration et étages
----------------

Etages : existent dans les donjons et hors des donjons
Petites clés aussi (on peut même avoir une clé de donjon à l'extérieur de ce dernier, cf démo de zmc)

-> Numérotation des phases d'exploration (?), qu'elles soient des donjons ou pas. Phases définies dans un fichier spécial, un peu comme dans donjons.zmc.
Est-ce nécessaire ? Il faut gérer les étages, la position du boss, la position des coffres, leur taille et leur état.
Question : stocker les informations spécifiques à une map (son étage, ses coordonnées) dans la map elle-même ou dans le fichier des phases d'exploration ? Faire un éditeur de propriétés de donjon (étages, maps concernées...).

Une map qui fait partie d'une phase d'exploration doit spécifier son étage : un vrai étage, aucun étage (peut servir pour une petite grotte avec un seul étage), étage "?"

Une map hors donjon peut spécifier un compteur de petites clés : cela permet de faire des petites clés dans une map hors donjon et même hors phase d'exploration. Remarque : le compteur peut très bien être celui d'un donjon existant. TODO ? en profiter pour spécifier ici les compteurs de clés des donjons au lieu de les faire automatiquement ?

Toute map, donjon ou non, doit spécifier ses propres coordonnées par rapport à la map virtuelle complète.
- Si c'est une map de donjon, cela permet d'afficher la position de Link sur la carte du donjon (s'il a la boussole).
- Si c'est une map de la carte du monde, cela permet d'afficher la position de Link sur la carte extérieure.
- Si c'est une map intérieure et hors donjon, cela indique la position de cet endroit sur la carte du monde et donc d'afficher la position de Link sur la carte extérieure.

Chaque donjon doit spécifier la taille de chacun de ses étages.
La carte du monde doit aussi spécifier sa taille.

----------------------
- Compléter l'éditeur de maps et de tilesets :
	- Dans l'éditeur de tileset, étudier le problème de permettre de modifier un tile sans avoir à le supprimer (pour conserver le même indice)
	- vue arborescente de toutes les entités par type ?
	- choisir les types d'entités affichés
	- nouveau projet : créer le fichier resource_db.zsd automatiquement, le répertoire data et les sous-répertoires
	- empêcher de mettre des entités au-delà de la partie extérieure d'une map
	- ResourceDatabase: créer les objets de chaque ressource depuis là, pour les fournir aux autres, ça évitera que chacun les recrée quand il a besoin (réfléchir au fait que les maps par exemple ne seront pas rechargées)
