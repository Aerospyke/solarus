- Diviser la classe Link en plusieurs parties (plus de 1000 lignes...) - LinkActions, LinkSprites ? ou alors LinkStateFree, LinkStateSword...
- Son d'un vase cassé : pas assez fort
- Fichiers de données : utiliser SDL_RWops et une archive cryptée ?
- Gérer les chemins des fichiers de sauvegarde dans FileTools
- Mettre de la couleur dans les messages
- Voir les boss de Pyro
- Afficher l'étage et le nom du donjon dans le hud
- Classe donjon dans l'éditeur (voir TODO dans Map.java)
- Animation tire + pierres trop lourdes
- Mettre les classes du hud dans un répertoire à part

- Prochaines grandes étapes :
  - collision au pixel près
  - couper des buissons et des herbes
  - écran de pause
  - combats
  - scripts
  - portes
  - pnj

----------------
Planning prévisionnel
----------------

Dimanche 5 octobre 2008 : animation tire + pierres trop lourdes, étage dans le hud
Dimanche 12 octobre 2008 : menu de pause fini, touches configurables
Dimanche 19 octobre 2008 : collisions au pixel près, couper les buissons avec l'épée
Dimanche 26 octobre 2008 : monde extérieur
Dimanche 2 novembre 2008 : combats (un type d'ennemi)
Dimanche 9 novembre 2008 : scripts et PNJ
Dimanche 16 novembre 2008 : maison des rubis
Dimanche 23 novembre 2008 : autres maisons et grottes
Dimanche 30 novembre 2008 : donjon 1 commencé ; annonce de la démo si on est dans les temps
Dimanche 7 décembre 2008 : combats (autres types d'ennemis), objets à finir (bombes, croissants, flacon...)
Dimanche 14 décembre 2008 : donjon 1 fini, démo finie, début des tests
Dimanche 21 décembre 2008 : cryptage des fichiers
Mercredi 24 décembre 2008 : sortie de la démo jusqu'à la fin du donjon 1

----------------
Couper des buissons avec l'épée :
----------------
- utiliser le mode collision_pixel directement (voir comment faire 2 modes à la fois car on a déjà facing point pour soulever)
- puis, en cas de collision au pixel près avec le sprite de l'épée :
    - si c'est un coup d'épée normal : on coupe le buisson si le facing point de link est dans l'alignement du buisson (pas forcément dessus) et à moins d'une certaine distance
    - si l'épée charge ou est chargée : pareil mais en plus on stoppe le chargement
    - si attaque tournoyante : on coupe le buisson et on laisse l'attaque tournoyante continuer (donc c'est le seul cas où on peut couper plusieurs buissons d'un coup)

Même chose pour l'herbe sauf que rien ne se passe quand l'épée charge

----------------
Carte, donjons, phases d'exploration et étages
----------------

Propriétés d'une map :
- Son numéro de monde : 0 si c'est une map extérieure, -1 si c'est une map intérieure hors donjon, ou un numéro de donjon (entre 1 et 14) si c'est une map de donjon.
- Ses coordonnées en pixels, à l'échelle 1, par rapport au plan général (carte du monde ou de l'étage d'un donjon).
- Son compteur de petites clés, qu'elle soit dans un donjon ou non (-1 si aucun); si elle est dans un donjon, on propose automatiquement le choix approprié.
- Son numéro d'étage, de -16 à 15, ou -99 pour l'étage spécial "?", ou -100 s'il n'y a pas d'étage. S'il y a un étage et qu'on est hors donjon, cet étage s'affiche lorsqu'on y entre. Si on est dans un donjon, il y a forcément un étage et il s'affiche ainsi que les autres étages.

Propriétés d'un donjon, définies dans un fichier spécial (ini ou xml) :
- Son numéro, de 1 à 14
- Son nom, donné dans le fichier de langue
- Ses étages : étage le plus bas (de -16 à 15) et nombre d'étages (de 1 à 32)
- Les dimensions de chaque étage : largeur et hauteurs en pixels à l'échelle 1
- Les coffres, le boss de le mini-boss : 2 solutions possibles :

Solution 1 (pas géniale car nécessite de charger toutes les maps d'un donjon quand on y entre) :
- Mettre dans le fichier spécial la liste des id de ses maps (champ multivalué si c'est un fichier ini), qui permet de déduire pendant le jeu les informations suivantes en chargeant les maps concernées (lors de l'entrée dans un donjon par exemple) :
  - Etage et position du boss et du mini-boss
  - Etage, position et variable de chaque coffre
Cette liste doit être mise à jour à chaque fois qu'une map est enregistrée (il faut vérifier qu'elle est dans le bon donjon et pas dans les autres).

Solution 2 (meilleure, comme dans ZMC mais automatisée) :
- Mettre dans le fichier spécial chaque coffre, mini-boss et boss de chaque donjon, avec son id de map (utile uniquement pour l'éditeur en fait), son étage, sa position et sa variable de sauvegarde. Mettre à jour ces informations depuis l'éditeur de maps au moment où on enregistre une map, sachant qu'une map peut par exemple avoir changé d'étage ou de donjon :
  - Si la map n'est pas dans un donjon, supprimer dans donjons.zsd tout coffre faisant référence à cette map.
  - Si la map est dans un donjon :
    - supprimer dans donjons.zsd tout coffre faisant référence à cette map, que ce soit dans le bon donjon ou pas
    - ajouter dans donjons.zsd les coffres de cette map

ini4j

[dungeon_1]
lowest_floor = -1
highest_floor = 2

[dungeon_1.floor_-1]
width = 960
height = 640

[dungeon_1.floor_0]
width = 960
height = 640

[dungeon_1.floor_1]
width = 960
height = 640

[dungeon_1.map_18.chest_0]
floor = -1
x = 128
y = 216
save = 14



----------------
réflexions initiales :

Etages : existent dans les donjons et hors des donjons
Petites clés aussi (on peut même avoir une clé de donjon à l'extérieur de ce dernier, cf démo de zmc)

-> Numérotation des phases d'exploration (?), qu'elles soient des donjons ou pas. Phases définies dans un fichier spécial, un peu comme dans donjons.zmc.
Est-ce nécessaire ? Il faut gérer les étages, la position du boss, la position des coffres, leur taille et leur état.
Question : stocker les informations spécifiques à une map (son étage, ses coordonnées) dans la map elle-même ou dans le fichier des phases d'exploration ? Faire un éditeur de propriétés de donjon (étages, maps concernées...).

Une map qui fait partie d'une phase d'exploration doit spécifier son étage : un vrai étage, aucun étage (peut servir pour une petite grotte avec un seul étage), étage "?"

Une map hors donjon peut spécifier un compteur de petites clés : cela permet de faire des petites clés dans une map hors donjon et même hors phase d'exploration. Remarque : le compteur peut très bien être celui d'un donjon existant. TODO ? en profiter pour spécifier ici les compteurs de clés des donjons au lieu de les faire automatiquement ?

Toute map, donjon ou non, doit spécifier ses propres coordonnées par rapport à la map virtuelle complète.
- Si c'est une map de donjon, cela permet d'afficher la position de Link sur la carte du donjon (s'il a la boussole).
- Si c'est une map de la carte du monde, cela permet d'afficher la position de Link sur la carte extérieure.
- Si c'est une map intérieure et hors donjon, cela indique la position de cet endroit sur la carte du monde et donc d'afficher la position de Link sur la carte extérieure.

Chaque donjon doit spécifier la taille de chacun de ses étages.
La carte du monde doit aussi spécifier sa taille.

----------------------
- Compléter l'éditeur de maps et de tilesets :
	- Dans l'éditeur de tileset, étudier le problème de permettre de modifier un tile sans avoir à le supprimer (pour conserver le même indice)
	- vue arborescente de toutes les entités par type ?
	- choisir les types d'entités affichés
	- nouveau projet : créer le fichier resource_db.zsd automatiquement, le répertoire data et les sous-répertoires
	- empêcher de mettre des entités au-delà de la partie extérieure d'une map
	- ResourceDatabase: créer les objets de chaque ressource depuis là, pour les fournir aux autres, ça évitera que chacun les recrée quand il a besoin (réfléchir au fait que les maps par exemple ne seront pas rechargées)
