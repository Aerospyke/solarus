- Diviser la classe Link en plusieurs parties (plus de 1000 lignes...) - LinkActions, LinkSprites ? ou alors LinkStateFree, LinkStateSword...
- Son d'un vase cassé : pas assez fort
- Fichiers de données : utiliser SDL_RWops et une archive cryptée ?
- Gérer les chemins des fichiers de sauvegarde dans FileTools
- Mettre de la couleur dans les messages
- Message : afficher la boîte de dialogue plus haut pour éviter de cacher Link
- Propriétés d'une map : numéro du donjon (entre 1 et 14, ou 0 pour pas de donjon)

----------------
Couper des buissons avec l'épée :
----------------
- utiliser le mode collision_pixel directement (voir comment faire 2 modes à la fois car on a déjà facing point pour soulever)
- puis, en cas de collision au pixel près avec le sprite de l'épée :
    - si c'est un coup d'épée normal : on coupe le buisson si le facing point de link est dans l'alignement du buisson (pas forcément dessus)
    - si l'épée charge ou est chargée : on coupe le buisson et on stoppe le chargement
    - si attaque tournoyante : on coupe le buisson et on laisse l'attaque tournoyante continuer (donc c'est le seul cas où on peut couper plusieurs buissons d'un coup)

Même chose pour l'herbe sauf que rien ne se passe quand l'épée charge


----------------------
- Compléter l'éditeur de maps et de tilesets :
	- Dans l'éditeur de tileset, étudier le problème de permettre de modifier un tile sans avoir à le supprimer (pour conserver le même indice)
	- vue arborescente de toutes les entités par type ?
	- choisir les types d'entités affichés
	- nouveau projet : créer le fichier resource_db.zsd automatiquement, le répertoire data et les sous-répertoires
	- empêcher de mettre des entités au-delà de la partie extérieure d'une map
	- ResourceDatabase: créer les objets de chaque ressource depuis là, pour les fournir aux autres, ça évitera que chacun les recrée quand il a besoin (réfléchir au fait que les maps par exemple ne seront pas rechargées)
